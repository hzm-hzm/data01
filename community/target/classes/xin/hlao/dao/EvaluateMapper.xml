<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.hlao.dao.EvaluateMapper">
  <resultMap id="BaseResultMap" type="xin.hlao.bean.Evaluate">
    <id column="eid" jdbcType="VARCHAR" property="eid" />
    <result column="admire" jdbcType="INTEGER" property="admire" />
    <result column="trample" jdbcType="INTEGER" property="trample" />
    <result column="uids" jdbcType="VARCHAR" property="uids" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, admire, trample, uids
  </sql>
  <select id="selectByExample" parameterType="xin.hlao.bean.EvaluateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluate
    where eid = #{eid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from evaluate
    where eid = #{eid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="xin.hlao.bean.EvaluateExample">
    delete from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xin.hlao.bean.Evaluate">
    insert into evaluate (eid, admire, trample, 
      uids)
    values (#{eid,jdbcType=VARCHAR}, #{admire,jdbcType=INTEGER}, #{trample,jdbcType=INTEGER}, 
      #{uids,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xin.hlao.bean.Evaluate">
    insert into evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="admire != null">
        admire,
      </if>
      <if test="trample != null">
        trample,
      </if>
      <if test="uids != null">
        uids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="admire != null">
        #{admire,jdbcType=INTEGER},
      </if>
      <if test="trample != null">
        #{trample,jdbcType=INTEGER},
      </if>
      <if test="uids != null">
        #{uids,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xin.hlao.bean.EvaluateExample" resultType="java.lang.Long">
    select count(*) from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evaluate
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=VARCHAR},
      </if>
      <if test="record.admire != null">
        admire = #{record.admire,jdbcType=INTEGER},
      </if>
      <if test="record.trample != null">
        trample = #{record.trample,jdbcType=INTEGER},
      </if>
      <if test="record.uids != null">
        uids = #{record.uids,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evaluate
    set eid = #{record.eid,jdbcType=VARCHAR},
      admire = #{record.admire,jdbcType=INTEGER},
      trample = #{record.trample,jdbcType=INTEGER},
      uids = #{record.uids,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xin.hlao.bean.Evaluate">
    update evaluate
    <set>
      <if test="admire != null">
        admire = #{admire,jdbcType=INTEGER},
      </if>
      <if test="trample != null">
        trample = #{trample,jdbcType=INTEGER},
      </if>
      <if test="uids != null">
        uids = #{uids,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.hlao.bean.Evaluate">
    update evaluate
    set admire = #{admire,jdbcType=INTEGER},
      trample = #{trample,jdbcType=INTEGER},
      uids = #{uids,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=VARCHAR}
  </update>
</mapper>